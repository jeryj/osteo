/*
Theme Name: Osteo
Author: Jeremy Jones
Author URI: http://jeremyjon.es
Description: A responsive, lightweight, semantic theme meant to be used by developers as a starting point.
Version: 1.0
*/
/* =Reset
-------------------------------------------------------------- */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  font-weight: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline; }

html {
  font-size: 100%;
  /* Corrects text resizing oddly in IE6/7 when body font-size is set using em units http://clagnut.com/blog/348/#c790 */
  overflow-y: scroll;
  /* Keeps page centred in all browsers regardless of content height */
  -webkit-text-size-adjust: 100%;
  /* Prevents iOS text size adjust after orientation change, without disabling user zoom */
  -ms-text-size-adjust: 100%;
  /* www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/ */ }

body {
  background: #fff;
  overflow: hidden; }

article, aside, details, figcaption, figure, footer, header, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

table {
  /* tables still need 'cellspacing="0"' in the markup */
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  font-weight: normal;
  text-align: left; }

blockquote:before, blockquote:after, q:before, q:after {
  content: ""; }

blockquote, q {
  quotes: "" ""; }

a:focus {
  outline: thin dotted; }

a:hover, a:active {
  /* Improves readability when focused and also mouse hovered in all browsers people.opera.com/patrickl/experiments/keyboard/test */
  outline: 0; }

a img {
  border: 0; }

/* Reseting to border-box so we can do 100% width with 20px and not mess stuff up. */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*
*
*   WORDPRESS DEFAULT STYLES
*/
/* Text meant only for screen readers */
.screen-reader-text {
  clip: rect(0 0 0 0);
  overflow: hidden;
  position: absolute;
  height: 1px;
  width: 1px; }

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  color: #21759b;
  display: block;
  font-size: 14px;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar */ }

/* =Content
----------------------------------------------- */
.hentry {
  margin: 0 0 1.6em; }

.byline, .updated {
  display: none; }

.single .byline, .group-blog .byline {
  display: inline; }

.page-content, .entry-content, .entry-summary {
  margin: 1.6em 0 0; }

.page-links {
  clear: both;
  margin: 0 0 1.6em; }

.entry-meta {
  font-size: .8em;
  color: #888; }

.entry-header .entry-meta {
  margin-top: -.875em; }

/* =Asides
----------------------------------------------- */
.blog .format-aside .entry-title, .archive .format-aside .entry-title {
  display: none; }

/* =Media
----------------------------------------------- */
.alignleft {
  display: inline;
  float: left;
  margin-right: 1.6em; }

.alignright {
  display: inline;
  float: right;
  margin-left: 1.6em; }

.aligncenter {
  clear: both;
  display: block;
  margin: 0 auto; }

.page-content img.wp-smiley, .entry-content img.wp-smiley, .comment-content img.wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0; }

.wp-caption {
  border: 1px solid #ddd;
  margin-bottom: 1.6em;
  max-width: 100%; }

.wp-caption img[class*="wp-image-"] {
  display: block;
  margin: 0 auto;
  padding: .6em 1.6em;
  width: 100%; }

.wp-caption p.wp-caption-text {
  font-size: .8em;
  color: #888;
  margin-bottom: 0; }

/* Make sure embeds and iframes fit their containers */
embed, iframe, object {
  max-width: 100%; }

/* =Navigation
----------------------------------------------- */
.site-content [class*="navigation"] {
  margin: 0 0 1.5em;
  overflow: hidden; }

[class*="navigation"] .nav-previous {
  float: left;
  width: 50%; }

[class*="navigation"] .nav-next {
  float: right;
  text-align: right;
  width: 50%; }

/* =Comments
----------------------------------------------- */
.comment-content a {
  word-wrap: break-word; }

.comment-metadata, .form-allowed-tags, .form-allowed-tags code {
  font-size: .8em;
  color: #888; }

.form-allowed-tags code {
  font-size: .95em; }

/* =Widgets
----------------------------------------------- */
.widget {
  margin: 0 0 1.6em; }

/* Make sure select elements fit in widgets */
.widget select {
  max-width: 100%; }

/* Search widget */
.widget_search .search-submit {
  display: none; }

.widget_search input[type="search"] {
  font-size: 1.2em;
  padding: 8px;
  width: 100%;
  max-width: 225px; }

.widget-area {
  font-size: .9em; }

.widget-area h1, .widget-area h2, .widget-area h3 {
  font-size: 1.2em;
  margin-bottom: .625em; }

.blue {
  color: #128BC8; }

.blue-bg {
  background: #128BC8; }

.dark-blue {
  color: #0A3348; }

.dark-blue-bg {
  background: #0A3348; }

.red {
  color: #C81C2D; }

.red-bg {
  background: #C81C2D; }

.dark-red {
  color: #7B0511; }

.dark-red-bg {
  background: #7B0511; }

.green {
  color: #888413; }

.green-bg {
  background: #888413; }

.orange {
  color: #ebac10; }

.orange-bg {
  background: #f9bb1e; }

.white {
  color: #fff; }

.gray {
  color: #888; }

.dark-gray {
  color: #666; }

.well:after, .row-pad:after, .photoswipe-gallery:after, .row:after, .section:after, .alt-section:after, .container:after, .clr:after, .group:after, [class*="content"]:after, [class*="site"]:after {
  content: "";
  display: table;
  clear: both; }

.well {
  padding: 20px;
  background-color: #F1F1F2; }

.hint {
  color: #666;
  font-size: 85%; }

.no-style, .i-list, .social-icons, .main-navigation ul {
  margin-left: 0;
  list-style: none;
  border: none; }
  .no-style li, .i-list li, .social-icons li, .main-navigation ul li {
    list-style: none; }

.center {
  text-align: center; }

.text-right {
  text-align: right; }

.justify {
  text-align: justify; }

.right {
  float: right; }

.left {
  float: left; }

.circle {
  border-radius: 50%; }

.m-no {
  margin: 0; }

.xm-top {
  margin-top: 30px; }

.xm-bottom {
  margin-bottom: 30px; }

.xm-vertical {
  margin-top: 30px;
  margin-bottom: 30px; }

.xm-horizontal {
  margin-left: 30px;
  margin-right: 30px; }

.p-no {
  padding: 0; }

.xp-top {
  padding-top: 30px; }

.xp-bottom {
  padding-bottom: 30px; }

.xp-vertical {
  padding-top: 30px;
  padding-bottom: 30px; }

.xp-horizontal {
  padding-left: 30px;
  padding-right: 30px; }

.large {
  font-size: 130%; }

.small {
  font-size: 85%; }

.animate-closed {
  max-height: 0;
  padding: 0;
  margin: 0;
  overflow: hidden; }

.icon-drop {
  position: relative;
  top: 1px; }

.i-list li {
  padding-left: 28px;
  position: relative;
  margin-bottom: 7px; }
  .i-list li i {
    position: absolute;
    left: 0;
    top: 2px;
    font-size: 105%; }
.i-list li ul li {
  padding: 0;
  margin: 0; }

.social-icons {
  font-size: 1.4em; }
  .social-icons li {
    display: inline-block;
    margin-right: .8em; }
    .social-icons li:last-child {
      margin-right: 0; }

.row-pad, .photoswipe-gallery, .row {
  max-width: 1020px;
  margin-left: auto;
  margin-right: auto; }
  .row-pad:after, .photoswipe-gallery:after, .row:after {
    content: " ";
    display: block;
    clear: both; }

.row-pad {
  padding-top: 1.8em;
  padding-bottom: 1.8em;
  margin-top: 1.25em;
  margin-bottom: 1.25em; }

.row-narrow {
  margin-left: auto;
  margin-right: auto;
  max-width: 40.5em; }

.section, .alt-section {
  width: 100%;
  padding-right: 20px;
  padding-left: 20px; }
  @media screen and (min-width: 34em) {
    .section, .alt-section {
      padding-right: 4%;
      padding-left: 4%; } }

.alt-section {
  background-color: #128BC8;
  color: #fff; }
  .alt-section h1, .alt-section h2, .alt-section h3, .alt-section h4, .alt-section h5, .alt-section h6 {
    color: #fff; }
  .alt-section a {
    color: #fff; }

.full-width {
  width: 100%; }

.container {
  padding-left: 4%;
  padding-right: 4%;
  max-width: 1020px;
  margin-left: auto;
  margin-right: auto; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

/*  SELF CLEARING FLOATS - CLEARFIX METHOD */
/* Clearing */
@media screen and (min-width: 43.75em) {
  #primary {
    width: 73.68421%;
    float: left;
    margin-right: 5.26316%; }
  #primary.full-width {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
  #secondary {
    width: 21.05263%;
    float: right;
    margin-right: 0; } }

@media screen and (min-width: 34em) {
  .grid_1 {
    width: 6.77966%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_1 {
    width: 6.77966%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_2 {
    width: 15.25424%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_2 {
    width: 15.25424%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_3 {
    width: 23.72881%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_3 {
    width: 23.72881%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_4 {
    width: 32.20339%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_4 {
    width: 32.20339%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_5 {
    width: 40.67797%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_5 {
    width: 40.67797%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_6 {
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_6 {
    width: 49.15254%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_7 {
    width: 57.62712%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_7 {
    width: 57.62712%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_8 {
    width: 66.10169%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_8 {
    width: 66.10169%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_9 {
    width: 74.57627%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_9 {
    width: 74.57627%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_10 {
    width: 83.05085%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_10 {
    width: 83.05085%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_11 {
    width: 91.52542%;
    float: left;
    margin-right: 1.69492%; }
  .rtl_grid .grid_11 {
    width: 91.52542%;
    float: right;
    margin-left: 1.69492%;
    margin-right: 0; }
  .grid_12 {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0; }
  .rtl_grid .grid_12 {
    width: 100%;
    float: right;
    margin-right: 0;
    margin-left: 0;
    margin-right: 0; }
  .last {
    float: right;
    margin-right: 0; }
  .rtl_grid .last {
    margin-left: 0; } }

.gallery_2 {
  margin-bottom: 1.6em; }
  @media screen and (min-width: 30em) {
    .gallery_2 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_2:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_2:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }
  @media screen and (min-width: 43.75em) {
    .gallery_2 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_2:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_2:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }

.gallery_3 {
  margin-bottom: 1.6em; }
  @media screen and (min-width: 30em) {
    .gallery_3 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_3:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_3:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }
  @media screen and (min-width: 43.75em) {
    .gallery_3 {
      width: 31.81818%;
      float: left;
      margin-bottom: 2.27273%; }
      .gallery_3:nth-child(3n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_3:nth-child(3n+2) {
        margin-left: 34.09091%;
        margin-right: -100%;
        clear: none; }
      .gallery_3:nth-child(3n+3) {
        margin-left: 68.18182%;
        margin-right: -100%;
        clear: none; } }

.gallery_4 {
  margin-bottom: 1.6em; }
  @media screen and (min-width: 30em) {
    .gallery_4 {
      width: 47.36842%;
      float: left;
      margin-bottom: 5.26316%; }
      .gallery_4:nth-child(2n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_4:nth-child(2n+2) {
        margin-left: 52.63158%;
        margin-right: -100%;
        clear: none; } }
  @media screen and (min-width: 43.75em) {
    .gallery_4 {
      width: 24.05063%;
      float: left;
      margin-bottom: 1.26582%; }
      .gallery_4:nth-child(4n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .gallery_4:nth-child(4n+2) {
        margin-left: 25.31646%;
        margin-right: -100%;
        clear: none; }
      .gallery_4:nth-child(4n+3) {
        margin-left: 50.63291%;
        margin-right: -100%;
        clear: none; }
      .gallery_4:nth-child(4n+4) {
        margin-left: 75.94937%;
        margin-right: -100%;
        clear: none; } }

body, button, input, select, textarea {
  color: #0A202B;
  font-family: "Helvetica Neue", Helvetica, Arial, Lucida Grande, sans-serif;
  font-size: 1em;
  line-height: 1.5;
  font-weight: 300; }

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-family: "Helvetica Neue", Helvetica, Arial, Lucida Grande, sans-serif;
  color: #0A202B;
  clear: both;
  margin: 0 0 10px;
  font-weight: 300;
  line-height: 1.2em; }

h1 {
  font-size: 1.65em; }

h2 {
  font-size: 1.5em; }

h3 {
  font-size: 1.35em; }

h4 {
  font-size: 1.2em; }

h5 {
  font-size: 1.1em; }

h6 {
  font-size: 1em; }

p + h1, ul + h1, p + h2, ul + h2, p + h3, ul + h3, p + h4, ul + h4, p + h5, ul + h5, p + h6, ul + h6 {
  margin-top: 1.8em; }

hr {
  background-color: #ddd;
  border: 0;
  height: 1px;
  margin-bottom: 18px; }

/* Text elements */
p {
  font-size: 1em;
  margin-bottom: 1.125em;
  font-weight: 300; }

ul, ol {
  margin: 0 0 1.25em 20px; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

li > ul, li > ol {
  margin-bottom: 0;
  margin-left: 20px; }

dt {
  font-size: 1.2em;
  margin-top: 1.5em; }

dt:first-child {
  margin-top: 0; }

dd {
  margin: 0 1.5em; }

dd:last-child {
  margin-bottom: 1.5em; }

b, strong {
  font-weight: bold; }

dfn, cite, em {
  font-style: italic; }

blockquote {
  font-family: georgia, times, serif;
  font-style: italic;
  margin: 0 1.5em;
  font-weight: 300;
  color: #666; }

address {
  margin: 0 0 1.5em; }

pre {
  background: #eee;
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: .95em;
  line-height: 1.6;
  margin-bottom: 1.6em;
  padding: 1.6em;
  overflow: auto;
  max-width: 100%; }

code, kbd, tt, var {
  font: .95em Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace; }

abbr, acronym {
  border-bottom: 1px dotted #666;
  cursor: help; }

mark, ins {
  background: #fff9c0;
  text-decoration: none; }

sup, sub {
  font-size: .75em;
  height: 0;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  bottom: 1ex; }

sub {
  top: .5ex; }

small {
  font-size: .75em; }

big {
  font-size: 1.25em; }

figure {
  margin: 0; }

table {
  margin: 0 0 1.25em;
  width: 100%;
  font-weight: 300; }

th {
  font-size: 1.15em;
  padding: 0 5px; }

thead th {
  border-bottom: 1px solid #128BC8; }

tfoot th {
  border-top: 1px solid #128BC8; }

tr:nth-child(odd) td {
  background: #eee; }

td {
  padding: 5px; }

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

label {
  font-size: 85%;
  color: #666; }

input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* Addresses box sizing set to content-box in IE8/9 */
  padding: 0;
  /* Addresses excess padding in IE8/9 */ }

/* haven't encountered these for a long time, and I have to reset it anyways to get search forms to be styled on ios. removing for now (6/23/15)
input[type="search"] {
    -webkit-appearance: textfield; // Addresses appearance set to searchfield in S5, Chrome
}
input[type="search"]::-webkit-search-decoration { // Corrects inner padding displayed oddly in S5, Chrome on OSX
    -webkit-appearance: none;
}
*/
button::-moz-focus-inner, input::-moz-focus-inner {
  /* Corrects inner padding and border displayed oddly in FF3/4 www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/ */
  border: 0;
  padding: 0; }

input[type="text"], input[type="email"], input[type="password"], input[type="search"], textarea {
  color: #666;
  border: 1px solid #ddd;
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.15);
  padding: 8px; }

input[type="text"]:focus, input[type="email"]:focus, input[type="password"]:focus, input[type="search"]:focus, textarea:focus {
  color: #111; }

textarea {
  overflow: auto;
  /* Removes default vertical scrollbar in IE6/7/8/9 */
  vertical-align: top;
  /* Improves readability and alignment in all browsers */
  width: 98%; }

/* Links */
a {
  color: #128BC8;
  text-decoration: none;
  -webkit-transition: color .2s;
  transition: color .2s; }

a:hover, a:focus, a:active {
  color: #0A3348; }

a.white {
  color: #fff; }

a.white:hover {
  color: #B5D4FF; }

button, input, select, textarea {
  font-size: 100%;
  /* Corrects font size not being inherited in all browsers */
  margin: 0;
  /* Addresses margins set differently in IE6/7, F3/4, S5, Chrome */
  vertical-align: baseline;
  /* Improves appearance and consistency in all browsers */
  *vertical-align: middle;
  /* Improves appearance and consistency in all browsers */ }

button, input {
  line-height: normal;
  /* Addresses FF3/4 setting line-height using !important in the UA stylesheet */ }

button, html input[type="button"], input[type="reset"], input[type="submit"], .btn {
  background: #C81C2D;
  padding: .5em 1em;
  font-size: 1em;
  line-height: 1.1;
  color: #fff;
  border: none;
  border-bottom: 3px solid #9b1623;
  cursor: pointer;
  /* Improves usability and consistency of cursor style between image-type 'input' and others */
  -webkit-appearance: none;
  /* Corrects inability to style clickable 'input' types in iOS */
  -webkit-transition: all .2s;
  transition: all .2s; }

button:hover, html input[type="button"]:hover, input[type="reset"]:hover, input[type="submit"]:hover, button:focus, html input[type="button"]:focus, input[type="reset"]:focus, input[type="submit"]:focus, .btn:hover {
  background: #7B0511;
  border-bottom: 3px solid #4a030a;
  color: #fff; }

button:active, html input[type="button"]:active, input[type="reset"]:active, input[type="submit"]:active, .btn:active, .btn.active {
  background: #ffc636; }

.btn-primary {
  padding: .5em 1em;
  font-size: 1.2em; }

.btn-small {
  font-size: .8em;
  padding: .5em 1em; }

.btn-med {
  font-size: 1.1em;
  padding: .5em 1em; }

.btn-large {
  font-size: 1.3em;
  padding: .5em 1.2em; }

.btn-xlarge {
  font-size: 1.6em;
  padding: .5em 1.2em; }

.section-title {
  text-align: center;
  margin-top: 1.25em;
  margin-bottom: 1.6em; }

#masthead {
  background: #fff;
  border-bottom: 1px solid #888;
  -webkit-transition: border-bottom 4s;
  transition: border-bottom 4s; }
  #masthead .logo {
    font-size: 2em;
    margin-right: 30px;
    -webkit-transition: all 400ms;
    transition: all 400ms; }
    @media (max-width: 47.99em) {
      #masthead .logo {
        text-align: center;
        margin: .5em auto; } }
    @media screen and (min-width: 48em) {
      #masthead .logo {
        float: left; } }

/* Gravity Forms */
body .gform_fields {
  list-style: none;
  margin: 0 0 1.25em; }
body .gfield_required {
  color: #C2351F; }
body .gform_wrapper {
  max-width: 500px;
  margin-left: auto !important;
  margin-right: auto !important; }
  body .gform_wrapper .validation_message, body .gform_wrapper .validation_error {
    padding: 10px;
    background: #F2BBBB;
    border-bottom: 2px solid #A64E4E;
    color: #662020; }
  body .gform_wrapper ul li.gfield {
    margin-bottom: 1.25em;
    list-style: none; }
  body .gform_wrapper .top_label .gfield_label {
    font-weight: 400; }
  body .gform_wrapper textarea, body .gform_wrapper input[type=text], body .gform_wrapper input[type=url], body .gform_wrapper input[type=email], body .gform_wrapper input[type=tel], body .gform_wrapper input[type=number], body .gform_wrapper input[type=password] {
    font-size: 1em;
    padding: 8px;
    border: 1px solid #ddd;
    border-bottom: 1px solid #bbb;
    border-radius: 0px;
    box-shadow: none; }
  body .gform_wrapper .top_label select.medium, body .gform_wrapper .top_label textarea.textarea.medium, body .gform_wrapper .hidden_label textarea.textarea.medium, body .gform_wrapper .top_label input.medium {
    width: 96.8%; }
body .gform_footer {
  text-align: center; }
body .gform_confirmation_message {
  text-align: center;
  padding: 80px 10px 10px 10px;
  background: #C2E3BA;
  border-bottom: 2px solid #57B53F;
  position: relative;
  max-width: 500px;
  margin: 0 auto; }
  body .gform_confirmation_message:before {
    position: absolute;
    top: 28px;
    left: 0;
    right: 0;
    font-size: 50px;
    color: #57B53F;
    text-align: center;
    content: "\e042";
    font-family: 'icomoon'; }
body .gform_validation_container {
  display: none; }

/*! PhotoSwipe main CSS by Dmitry Semenov | photoswipe.com | MIT license */
/*
	Styles for basic PhotoSwipe functionality (sliding area, open/close transitions)
*/
/* pswp = photoswipe */
.pswp {
  display: none;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  overflow: hidden;
  -ms-touch-action: none;
  touch-action: none;
  z-index: 99999999;
  -webkit-text-size-adjust: 100%;
  /* create separate layer, to avoid paint on window.onscroll in webkit/blink */
  -webkit-backface-visibility: hidden;
  outline: none; }
  .pswp * {
    box-sizing: border-box; }
  .pswp img {
    max-width: none; }

/* style is added when JS option showHideOpacity is set to true */
.pswp--animate_opacity {
  /* 0.001, because opacity:0 doesn't trigger Paint action, which causes lag at start of transition */
  opacity: 0.001;
  will-change: opacity;
  /* for open/close transition */
  -webkit-transition: opacity 333ms cubic-bezier(.4, 0, .22, 1);
          transition: opacity 333ms cubic-bezier(.4, 0, .22, 1); }

.pswp--open {
  display: block; }

.pswp--zoom-allowed .pswp__img {
  /* autoprefixer: off */
  cursor: -webkit-zoom-in;
  cursor: -moz-zoom-in;
  cursor: zoom-in; }

.pswp--zoomed-in .pswp__img {
  /* autoprefixer: off */
  cursor: -webkit-grab;
  cursor: -moz-grab;
  cursor: grab; }

.pswp--dragging .pswp__img {
  /* autoprefixer: off */
  cursor: -webkit-grabbing;
  cursor: -moz-grabbing;
  cursor: grabbing; }

/*
	Background is added as a separate element.
	As animating opacity is much faster than animating rgba() background-color.
*/
.pswp__bg {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(242, 242, 242, 0.85);
  opacity: 0;
  -webkit-backface-visibility: hidden;
  will-change: opacity; }

.pswp__scroll-wrap {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden; }

.pswp__container, .pswp__zoom-wrap {
  -ms-touch-action: none;
  touch-action: none;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0; }

/* Prevent selection and tap highlights */
.pswp__container, .pswp__img {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none; }

.pswp__zoom-wrap {
  position: absolute;
  width: 100%;
  -webkit-transform-origin: left top;
  -ms-transform-origin: left top;
  transform-origin: left top;
  /* for open/close transition */
  -webkit-transition: -webkit-transform 333ms cubic-bezier(.4, 0, .22, 1);
          transition: transform 333ms cubic-bezier(.4, 0, .22, 1); }

.pswp__bg {
  will-change: opacity;
  /* for open/close transition */
  -webkit-transition: opacity 333ms cubic-bezier(.4, 0, .22, 1);
          transition: opacity 333ms cubic-bezier(.4, 0, .22, 1); }

.pswp--animated-in .pswp__bg, .pswp--animated-in .pswp__zoom-wrap {
  -webkit-transition: none;
  transition: none; }

.pswp__container, .pswp__zoom-wrap {
  -webkit-backface-visibility: hidden;
  will-change: transform; }

.pswp__item {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  overflow: hidden; }

.pswp__img {
  position: absolute;
  width: auto;
  height: auto;
  top: 0;
  left: 0;
  -webkit-transition: opacity 0.15s;
          transition: opacity 0.15s; }

/*
	stretched thumbnail or div placeholder element (see below)
	style is added to avoid flickering in webkit/blink when layers overlap
*/
.pswp__img--placeholder {
  -webkit-backface-visibility: hidden; }

/*
	div element that matches size of large image
	large image loads on top of it
*/
.pswp__img--placeholder--blank {
  background: #222; }

.pswp--ie .pswp__img {
  width: 100% !important;
  height: auto !important;
  left: 0;
  top: 0; }

/*
	Error message appears when image is not loaded
	(JS option errorMsg controls markup)
*/
.pswp__error-msg {
  position: absolute;
  left: 0;
  top: 50%;
  width: 100%;
  text-align: center;
  font-size: 14px;
  line-height: 16px;
  margin-top: -8px;
  color: #888; }

.pswp__error-msg a {
  color: #888;
  text-decoration: underline; }

/*

	1. Buttons

 */
/* <button> css reset */
.pswp__button {
  width: 44px;
  height: 44px;
  position: relative;
  background: none;
  cursor: pointer;
  overflow: visible;
  -webkit-appearance: none;
  display: block;
  border: 0;
  padding: 0;
  margin: 0;
  float: right;
  opacity: 0.75;
  -webkit-transition: opacity 0.2s;
          transition: opacity 0.2s;
  box-shadow: none; }
  .pswp__button:focus, .pswp__button:hover {
    opacity: 1; }
  .pswp__button:active {
    outline: none;
    opacity: 0.9; }
  .pswp__button::-moz-focus-inner {
    padding: 0;
    border: 0; }

.pswp__button, .pswp__button--arrow--left:before, .pswp__button--arrow--right:before {
  font-size: 30px;
  font-family: 'icomoon';
  content: '\e610';
  background: none;
  color: #555; }
  .pswp__button:hover, .pswp__button--arrow--left:before:hover, .pswp__button--arrow--right:before:hover {
    background: none; }

.pswp__button--arrow--right:before {
  content: '\e60f'; }

.pswp__button--fs:before, .pswp__button--zoom:before, .pswp__button--close:before {
  position: relative;
  line-height: 44px;
  font-size: 18px;
  content: '\e117';
  background: none;
  color: #888;
  right: 10px; }
  .pswp__button--fs:before:hover, .pswp__button--zoom:before:hover, .pswp__button--close:before:hover {
    color: #333; }

/* pswp__ui--over-close class it added when mouse is over element that should close gallery */
.pswp__ui--over-close .pswp__button--close {
  opacity: 1; }

.pswp__button--share {
  background-position: -44px -44px; }

.pswp__button--fs {
  display: none; }

.pswp--supports-fs .pswp__button--fs {
  display: block; }
  .pswp--supports-fs .pswp__button--fs:before {
    content: '\e112'; }

.pswp--fs .pswp__button--fs:before {
  content: '\e113'; }

.pswp__button--zoom {
  display: none; }
  .pswp__button--zoom:before {
    content: '\e037'; }

.pswp--zoom-allowed .pswp__button--zoom {
  display: block; }

.pswp--zoomed-in .pswp__button--zoom:before {
  content: '\e038'; }

/* no arrows on touch screens */
.pswp--touch .pswp__button--arrow--left, .pswp--touch .pswp__button--arrow--right {
  visibility: hidden; }

/*
	Arrow buttons hit area
	(icon is added to :before pseudo-element)
*/
.pswp__button--arrow--left, .pswp__button--arrow--right {
  background: none;
  top: 50%;
  margin-top: -50px;
  width: 70px;
  height: 100px;
  position: absolute;
  content: '\e610'; }

.pswp__button--arrow--left {
  left: 0; }

.pswp__button--arrow--right {
  right: 0; }

.pswp__button--arrow--left:before, .pswp__button--arrow--right:before {
  top: 35px;
  position: absolute;
  font-size: 30px;
  font-family: 'icomoon'; }

.pswp__button--arrow--left:before {
  font-size: 30px;
  font-family: 'icomoon';
  left: 20px;
  content: '\e610'; }

.pswp__button--arrow--right:before {
  right: 20px;
  content: '\e60f'; }

/*

	2. Share modal/popup and links

 */
.pswp__counter, .pswp__share-modal {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
      user-select: none; }

.pswp__share-modal {
  display: block;
  background: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  padding: 10px;
  position: absolute;
  z-index: 100000099;
  opacity: 0;
  -webkit-transition: opacity 0.25s ease-out;
          transition: opacity 0.25s ease-out;
  -webkit-backface-visibility: hidden;
  will-change: opacity; }

.pswp__share-modal--hidden {
  display: none; }

.pswp__share-tooltip {
  z-index: 100000119;
  position: absolute;
  background: #FFF;
  top: 56px;
  border-radius: 2px;
  display: block;
  width: auto;
  right: 44px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
  -webkit-transform: translateY(6px);
      -ms-transform: translateY(6px);
          transform: translateY(6px);
  -webkit-transition: -webkit-transform 0.25s;
          transition: transform 0.25s;
  -webkit-backface-visibility: hidden;
  will-change: transform; }
  .pswp__share-tooltip a {
    display: block;
    padding: 8px 12px;
    color: #000;
    text-decoration: none;
    font-size: 14px;
    line-height: 18px; }
    .pswp__share-tooltip a:hover {
      text-decoration: none;
      color: #000; }
    .pswp__share-tooltip a:first-child {
      /* round corners on the first/last list item */
      border-radius: 2px 2px 0 0; }
    .pswp__share-tooltip a:last-child {
      border-radius: 0 0 2px 2px; }

.pswp__share-modal--fade-in {
  opacity: 1; }
  .pswp__share-modal--fade-in .pswp__share-tooltip {
    -webkit-transform: translateY(0);
        -ms-transform: translateY(0);
            transform: translateY(0); }

/* increase size of share links on touch devices */
.pswp--touch .pswp__share-tooltip a {
  padding: 16px 12px; }

a.pswp__share--facebook:before {
  content: '';
  display: block;
  width: 0;
  height: 0;
  position: absolute;
  top: -12px;
  right: 15px;
  border: 6px solid transparent;
  border-bottom-color: #FFF;
  -webkit-pointer-events: none;
  -moz-pointer-events: none;
  pointer-events: none; }
a.pswp__share--facebook:hover {
  background: #3E5C9A;
  color: #FFF; }
  a.pswp__share--facebook:hover:before {
    border-bottom-color: #3E5C9A; }

a.pswp__share--twitter:hover {
  background: #55ACEE;
  color: #FFF; }

a.pswp__share--pinterest:hover {
  background: #CCC;
  color: #CE272D; }

a.pswp__share--download:hover {
  background: #DDD; }

/*

	3. Index indicator ("1 of X" counter)

 */
.pswp__counter {
  position: absolute;
  left: 20px;
  top: 0;
  font-size: .85em;
  line-height: 44px;
  color: #888; }

/*

	4. Caption

 */
.pswp__caption {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  min-height: 44px; }
  .pswp__caption small {
    font-size: 11px;
    color: #BBB; }

.pswp__caption__center {
  text-align: left;
  max-width: 600px;
  margin: 0 auto;
  font-size: .85em;
  padding: 10px;
  color: #666;
  background: rgba(242, 242, 242, 0.7); }

.pswp__caption--empty {
  display: none; }

/* Fake caption element, used to calculate height of next/prev image */
.pswp__caption--fake {
  visibility: hidden; }

/*

	5. Loading indicator (preloader)

	You can play with it here - http://codepen.io/dimsemenov/pen/yyBWoR

 */
.pswp__preloader {
  width: 44px;
  height: 44px;
  position: absolute;
  top: 0;
  left: 50%;
  margin-left: -22px;
  opacity: 0;
  -webkit-transition: opacity 0.25s ease-out;
          transition: opacity 0.25s ease-out;
  will-change: opacity;
  direction: ltr; }

.pswp__preloader__icn {
  width: 20px;
  height: 20px;
  margin: 12px; }

.pswp__preloader--active {
  opacity: 1; }
  .pswp__preloader--active .pswp__preloader__icn {
    /* We use .gif in browsers that don't support CSS animation */
    background: url(preloader.gif) 0 0 no-repeat; }

.pswp--css_animation .pswp__preloader--active {
  opacity: 1; }
  .pswp--css_animation .pswp__preloader--active .pswp__preloader__icn {
    -webkit-animation: clockwise 500ms linear infinite;
            animation: clockwise 500ms linear infinite; }
  .pswp--css_animation .pswp__preloader--active .pswp__preloader__donut {
    -webkit-animation: donut-rotate 1000ms cubic-bezier(.4, 0, .22, 1) infinite;
            animation: donut-rotate 1000ms cubic-bezier(.4, 0, .22, 1) infinite; }
.pswp--css_animation .pswp__preloader__icn {
  background: none;
  opacity: 0.75;
  width: 14px;
  height: 14px;
  position: absolute;
  left: 15px;
  top: 15px;
  margin: 0; }
.pswp--css_animation .pswp__preloader__cut {
  /*
			The idea of animating inner circle is based on Polymer ("material") loading indicator
			 by Keanu Lee https://blog.keanulee.com/2014/10/20/the-tale-of-three-spinners.html
		*/
  position: relative;
  width: 7px;
  height: 14px;
  overflow: hidden; }
.pswp--css_animation .pswp__preloader__donut {
  box-sizing: border-box;
  width: 14px;
  height: 14px;
  border: 2px solid #FFF;
  border-radius: 50%;
  border-left-color: transparent;
  border-bottom-color: transparent;
  position: absolute;
  top: 0;
  left: 0;
  background: none;
  margin: 0; }

@media screen and (max-width: 1024px) {
  .pswp__preloader {
    position: relative;
    left: auto;
    top: auto;
    margin: 0;
    float: right; } }

@-webkit-keyframes clockwise {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }

  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes clockwise {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }

  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@-webkit-keyframes donut-rotate {
  0% {
    -webkit-transform: rotate(0);
            transform: rotate(0); }

  50% {
    -webkit-transform: rotate(-140deg);
            transform: rotate(-140deg); }

  100% {
    -webkit-transform: rotate(0);
            transform: rotate(0); } }

@keyframes donut-rotate {
  0% {
    -webkit-transform: rotate(0);
            transform: rotate(0); }

  50% {
    -webkit-transform: rotate(-140deg);
            transform: rotate(-140deg); }

  100% {
    -webkit-transform: rotate(0);
            transform: rotate(0); } }

/*

	6. Additional styles

 */
/* root element of UI */
.pswp__ui {
  -webkit-font-smoothing: auto;
  visibility: visible;
  opacity: 1;
  z-index: 100000049; }

/* top black bar with buttons and "1 of X" indicator */
.pswp__top-bar {
  position: absolute;
  left: 0;
  top: 0;
  height: 44px;
  width: 100%; }

.pswp__caption, .pswp__top-bar, .pswp--has_mouse .pswp__button--arrow--left, .pswp--has_mouse .pswp__button--arrow--right {
  -webkit-backface-visibility: hidden;
  will-change: opacity;
  -webkit-transition: opacity 333ms cubic-bezier(.4, 0, .22, 1);
          transition: opacity 333ms cubic-bezier(.4, 0, .22, 1); }

/* pswp--has_mouse class is added only when two subsequent mousemove events occur */
.pswp--has_mouse .pswp__button--arrow--left, .pswp--has_mouse .pswp__button--arrow--right {
  visibility: visible; }

.pswp__top-bar, .pswp__caption {
  background-color: none; }

/* pswp__ui--fit class is added when main image "fits" between top bar and bottom bar (caption) */
.pswp__ui--fit .pswp__top-bar, .pswp__ui--fit .pswp__caption {
  background: none;
  color: #666; }

/* pswp__ui--idle class is added when mouse isn't moving for several seconds (JS option timeToIdle) */
.pswp__ui--idle .pswp__top-bar {
  opacity: 0; }
.pswp__ui--idle .pswp__button--arrow--left, .pswp__ui--idle .pswp__button--arrow--right {
  opacity: 0; }

/*
	pswp__ui--hidden class is added when controls are hidden
	e.g. when user taps to toggle visibility of controls
*/
.pswp__ui--hidden .pswp__top-bar, .pswp__ui--hidden .pswp__caption, .pswp__ui--hidden .pswp__button--arrow--left, .pswp__ui--hidden .pswp__button--arrow--right {
  /* Force paint & create composition layer for controls. */
  opacity: 0.001; }

/* pswp__ui--one-slide class is added when there is just one item in gallery */
.pswp__ui--one-slide .pswp__button--arrow--left, .pswp__ui--one-slide .pswp__button--arrow--right, .pswp__ui--one-slide .pswp__counter {
  display: none; }

.pswp__element--disabled {
  display: none !important; }

.pswp--minimal--dark .pswp__top-bar {
  background: none; }

.photoswipe-gallery {
  margin-top: 2em;
  margin-bottom: 2em; }
  .photoswipe-gallery .gallery-item {
    width: 49.49495%;
    float: left;
    margin-bottom: 1.0101%; }
    .photoswipe-gallery .gallery-item:nth-child(2n+1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both;
      margin-left: 0; }
    .photoswipe-gallery .gallery-item:nth-child(2n+2) {
      margin-left: 50.50505%;
      margin-right: -100%;
      clear: none; }
    @media screen and (min-width: 34em) {
      .photoswipe-gallery .gallery-item {
        width: 32.77311%;
        float: left;
        margin-bottom: 0.84034%; }
        .photoswipe-gallery .gallery-item:nth-child(3n+1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .photoswipe-gallery .gallery-item:nth-child(3n+2) {
          margin-left: 33.61345%;
          margin-right: -100%;
          clear: none; }
        .photoswipe-gallery .gallery-item:nth-child(3n+3) {
          margin-left: 67.22689%;
          margin-right: -100%;
          clear: none; } }
    @media screen and (min-width: 48em) {
      .photoswipe-gallery .gallery-item {
        width: 24.5283%;
        float: left;
        margin-bottom: 0.62893%; }
        .photoswipe-gallery .gallery-item:nth-child(4n+1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .photoswipe-gallery .gallery-item:nth-child(4n+2) {
          margin-left: 25.15723%;
          margin-right: -100%;
          clear: none; }
        .photoswipe-gallery .gallery-item:nth-child(4n+3) {
          margin-left: 50.31447%;
          margin-right: -100%;
          clear: none; }
        .photoswipe-gallery .gallery-item:nth-child(4n+4) {
          margin-left: 75.4717%;
          margin-right: -100%;
          clear: none; } }
    .photoswipe-gallery .gallery-item .gallery-image {
      width: 100%;
      height: auto;
      display: block;
      margin: 0 auto; }
  .photoswipe-gallery.two-gallery .gallery-item {
    width: 49.49495%;
    float: left;
    margin-bottom: 1.0101%; }
    .photoswipe-gallery.two-gallery .gallery-item:nth-child(2n+1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both;
      margin-left: 0; }
    .photoswipe-gallery.two-gallery .gallery-item:nth-child(2n+2) {
      margin-left: 50.50505%;
      margin-right: -100%;
      clear: none; }
  @media screen and (min-width: 48em) {
    .photoswipe-gallery.three-gallery .gallery-item {
      width: 32.77311%;
      float: left;
      margin-bottom: 0.84034%; }
      .photoswipe-gallery.three-gallery .gallery-item:nth-child(3n+1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .photoswipe-gallery.three-gallery .gallery-item:nth-child(3n+2) {
        margin-left: 33.61345%;
        margin-right: -100%;
        clear: none; }
      .photoswipe-gallery.three-gallery .gallery-item:nth-child(3n+3) {
        margin-left: 67.22689%;
        margin-right: -100%;
        clear: none; } }
  .photoswipe-gallery .gallery-caption {
    display: none; }

/*%active-nav {
    position: relative;

    &:after {
        content: '';
        display: block;
        position: absolute;
        bottom: -8px;
        height: 8px;
        width: 100%;
        left: 0;
        right: 0;
        background: $red;
    }
}


.no-js {
    .menu-item-has-children.menu-item-object-service_type {
        @extend %active-nav;
    }
}

.menu-item-object-service_type {
    &.active-border {
        @extend %active-nav;
    }
}
*/
.main-navigation {
  font-family: "Helvetica Neue", Helvetica, Arial, Lucida Grande, sans-serif; }
  .main-navigation ul ul {
    overflow: hidden;
    margin-bottom: 0;
    border: none;
    -webkit-transition: height .5s;
    transition: height .5s; }
  .main-navigation .active-bars a {
    color: #111; }
  .main-navigation a {
    color: #888; }
    .main-navigation a:hover {
      color: #111; }

@media (max-width: 47.99em) {
  .main-navigation {
    position: fixed;
    overflow-y: scroll;
    top: -100%;
    bottom: 100%;
    right: 0;
    left: 0;
    padding: 1.25em 2em;
    font-size: 1.2em;
    z-index: -1;
    background: #fff;
    -webkit-transition: all .5s;
    transition: all .5s;
    border-bottom: 1px solid #888; }
    .main-navigation.toggled {
      top: 0;
      bottom: 0;
      z-index: 99999999; }
    .main-navigation li {
      padding: .1825em 0 .1825em .625em;
      border-left: 3px solid #111; }
      .main-navigation li.current-menu-parent, .main-navigation li.active-bars {
        border-left: 3px solid #128BC8; }
        .main-navigation li.current-menu-parent a, .main-navigation li.active-bars a {
          color: #111; }
      .main-navigation li.current-menu-item a {
        color: #128BC8; }
      .main-navigation li.current-menu-item .sub-menu a {
        color: #111; }
      .main-navigation li ul li {
        padding-left: 1.25em;
        border-left: none;
        font-size: .9em; }
        .main-navigation li ul li:last-child {
          padding-bottom: 0; }
  .close-submenu {
    display: none; }
  .menu-toggle {
    position: absolute;
    top: 1.25em;
    right: 1em;
    width: 1.5em;
    height: 0.975em;
    cursor: pointer;
    z-index: 99999999999;
    -ms-touch-action: manipulation;
        touch-action: manipulation; }
  .bar, .bar:after, .bar:before {
    width: 1.5em;
    height: 0.125em; }
  .bar {
    position: relative;
    -webkit-transform: translateY(0.425em);
        -ms-transform: translateY(0.425em);
            transform: translateY(0.425em);
    background: #111;
    -webkit-transition: all 0ms 300ms;
            transition: all 0ms 300ms; }
    .bar.animate {
      background: transparent; }
  .bar:before {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0.425em;
    background: #111;
    -webkit-transition: bottom 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms cubic-bezier(0.23, 1, 0.32, 1);
            transition: bottom 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms cubic-bezier(0.23, 1, 0.32, 1); }
  .bar:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0.425em;
    background: #111;
    -webkit-transition: top 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms cubic-bezier(0.23, 1, 0.32, 1);
            transition: top 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms cubic-bezier(0.23, 1, 0.32, 1); }
  .bar.animate:after {
    top: 0;
    -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
            transform: rotate(45deg);
    -webkit-transition: top 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1);
            transition: top 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1); }
  .bar.animate:before {
    bottom: 0;
    -webkit-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
    -webkit-transition: bottom 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1);
            transition: bottom 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1); } }

@media (min-width: 34em) and (max-width: 47.99em) {
  .main-navigation {
    padding: 2em 20%; }
    .main-navigation ul {
      padding-left: 1.25em; }
  .menu-toggle {
    position: absolute;
    top: 1.25em;
    right: 1.25em; } }

@media screen and (min-width: 48em) {
  .main-navigation ul li {
    float: left;
    padding: .375em 1.25em .375em;
    position: relative;
    top: .675em; }
    .main-navigation ul li.active-bars {
      background: #F1F1F2; }
      .main-navigation ul li.active-bars a {
        color: #111; }
    .main-navigation ul li.active {
      -webkit-transition: all .5s;
      transition: all .5s; }
      .main-navigation ul li.active .close-submenu {
        opacity: 1;
        top: -7px;
        z-index: 9; }
    .main-navigation ul li .close-submenu {
      opacity: 0;
      top: -10px;
      position: absolute;
      left: -3px;
      color: #888;
      z-index: -1;
      -webkit-transition: all .4s;
      transition: all .4s; }
      .main-navigation ul li .close-submenu:hover {
        color: #C81C2D;
        cursor: pointer; }
    .main-navigation ul li .sub-menu {
      position: absolute;
      left: 0px;
      width: 200px;
      background: #F1F1F2;
      margin-top: .375em;
      text-align: left; }
      .main-navigation ul li .sub-menu.active {
        z-index: 9999; }
      .main-navigation ul li .sub-menu li {
        top: 0;
        float: none;
        font-size: .9em; }
        .main-navigation ul li .sub-menu li:last-child {
          border-bottom: 4px solid #888; } }

#colophon {
  background-color: #F1F1F2;
  color: #666;
  font-size: .9em; }
  #colophon .credits {
    font-size: .8em; }
  @media screen and (min-width: 34em) {
    #colophon .widget-area {
      width: 32.20339%;
      float: left;
      margin-right: 1.69492%; }
      #colophon .widget-area:last-child {
        float: right;
        margin-right: 0; } }
  #colophon .created-by {
    float: right; }


/*# sourceMappingURL=data:application/json;base64, */